---
- name: valid syntax (1)
  dsl: |
    model
      schema 1.1
- name: "valid syntax (2): comment preceding model"
  dsl: |
    # ID: 123
    model
      schema 1.1
- name: "valid syntax (3): extraneous spacing"
  dsl: |
    model
      schema 1.1
    type user    
    type folder    
            
      relations     
        define admin: [user]     
        define viewer: [user]   
          
        define can_view: viewer or admin
- name: no model header
  dsl: |
    type user
  expected_errors:
    - msg: "extraneous input 'type' expecting {WHITESPACE, '#', 'module', 'model', NEWLINE}"
      line:
        start: 0
        end: 0
      column:
        start: 0
        end: 4
      metadata:
        symbol: "type"
    - msg: "extraneous input 'user' expecting {'#', 'module', 'model', NEWLINE}"
      line:
        start: 0
        end: 0
      column:
        start: 5
        end: 9
      metadata:
        symbol: "user"
    - msg: "mismatched input '<EOF>' expecting {'#', 'module', 'model'}"
      line:
        start: 1
        end: 1
      column:
        start: 0
        end: 5
      metadata:
        symbol: "<EOF>"
- name: no schema value
  dsl: |
    model
    type user
  expected_errors:
    - msg: "mismatched input 'type' expecting 'schema'"
      line:
        start: 1
        end: 1
      column:
        start: 0
        end: 4
      metadata:
        symbol: "type"
- name: schema required
  dsl: |
    model
      schema1.1
  expected_errors:
    - msg: "mismatched input 'schema1' expecting 'schema'"
      line:
        start: 1
        end: 1
      column:
        start: 2
        end: 9
      metadata:
        symbol: "schema1"
- name: schema 1.1 required
  dsl: |
    model
      schema 11
  expected_errors:
    - msg: "mismatched input '11' expecting SCHEMA_VERSION"
      line:
        start: 1
        end: 1
      column:
        start: 9
        end: 11
      metadata:
        symbol: "11"
- name: schema 1.1 required (2)
  dsl: |
    model
      schema a.b
  expected_errors:
    - msg: "mismatched input 'a' expecting SCHEMA_VERSION"
      line:
        start: 1
        end: 1
      column:
        start: 9
        end: 10
      metadata:
        symbol: "a"
- name: a module with missing name
  dsl: |
    module

    type user
  expected_errors:
    - msg: "mismatched input '\\n\\n' expecting WHITESPACE"
      line:
        start: 0
        end: 0
      column:
        start: 6
        end: 8
      metadata:
        symbol: "\n\n"
- name: a module with missing name with whitespace
  dsl: "module     \n\ntype user"
  expected_errors:
    - msg: "mismatched input '\\n\\n' expecting WHITESPACE"
      line:
        start: 0
        end: 0
      column:
        start: 6
        end: 8
      metadata:
        symbol: "\n\n"
- name: no relations keyword
  dsl: |
    model
      schema 1.1
    type user
    type folder
      define viewer: [user]
  expected_errors:
    - msg: "no viable alternative at input '\\n  define'"
      line:
        start: 4
        end: 4
      column:
        start: 2
        end: 8
      metadata:
        symbol: "define"
- name: mixed operators
  dsl: |
    model
      schema 1.1
    type user
      relations
        define own: [user]
        define follower: [user]
        define blocked: [user]
        define viewer: [user] and follower or own but not blocked
  expected_errors:
    - msg: "mismatched input ' ' expecting {<EOF>, NEWLINE}"
      line:
        start: 7
        end: 7
      column:
        start: 38
        end: 39
      metadata:
        symbol: " "
- name: mixed operators with parens
  dsl: |
    model
      schema 1.1
    type user
      relations
        define own: [user]
        define follower: [user]
        define blocked: [user]
        define viewer: [user] and (follower but not blocked) or own
  expected_errors:
    - msg: "mismatched input ' ' expecting {<EOF>, NEWLINE}"
      line:
        start: 7
        end: 7
      column:
        start: 56
        end: 57
      metadata:
        symbol: " "
- name: mixed operators with mulitple paren sets
  dsl: |
    model
      schema 1.1
    type user
      relations
        define own: [user]
        define follower: [user]
        define blocked: [user]
        define viewer: [user] and (follower but not blocked) or (foo and bar) and (baz or foobar)
  expected_errors:
    - msg: "mismatched input ' ' expecting {<EOF>, NEWLINE}"
      line:
        start: 7
        end: 7
      column:
        start: 56
        end: 57
      metadata:
        symbol: " "
- name: mixed operators with mulitple operations and paren sets
  dsl: |
    model
      schema 1.1
    type user
      relations
        define allowed: [user]
        define follower: [user]
        define blocked: [user]
        define restricted: [user]
        define viewer: [user] or allowed or follower or (blocked or restricted or (foo and bar but not baz))
  expected_errors:
    - msg: "extraneous input 'but not' expecting {')', WHITESPACE}"
      line:
        start: 8
        end: 8
      column:
        start: 91
        end: 98
      metadata:
        symbol: "but not"
    - msg: "extraneous input 'baz' expecting {')', WHITESPACE}"
      line:
        start: 8
        end: 8
      column:
        start: 99
        end: 102
      metadata:
        symbol: "baz"
- name: mixed operators with mixed operations and paren sets
  dsl: |
    model
      schema 1.1
    type user
      relations
        define follower: [user]
        define blocked: [user]
        define restricted: [user]
        define viewer: [user] and follower or (restricted but not blocked)
  expected_errors:
    - msg: "mismatched input ' ' expecting {<EOF>, NEWLINE}"
      line:
        start: 7
        end: 7
      column:
        start: 38
        end: 39
      metadata:
        symbol: " "
- name: mixed operators with mixed operations and paren sets
  dsl: |
    model
      schema 1.1
    type user
      relations
        define follower: [user]
        define blocked: [user]
        define restricted: [user]
        define viewer: [user] and (follower but not blocked but not restricted)
  expected_errors:
    - msg: "extraneous input 'but not' expecting {')', WHITESPACE}"
      line:
        start: 7
        end: 7
      column:
        start: 56
        end: 63
      metadata:
        symbol: "but not"
    - msg: "extraneous input 'restricted' expecting {')', WHITESPACE}"
      line:
        start: 7
        end: 7
      column:
        start: 64
        end: 74
      metadata:
        symbol: "restricted"
- name: misspelled define
  dsl: |
    model
      schema 1.1
    type user
    type document
      relations
        defne viewer: [user]
  expected_errors:
    - msg: "no viable alternative at input '\\n    defne'"
      line:
        start: 5
        end: 5
      column:
        start: 4
        end: 9
      metadata:
        symbol: "defne"
- name: comments inbetween relationships
  dsl: |
    model
      schema 1.1
    type user
    type document
      relations
        # This is a comment 1
        define viewer: [user]
        # This is a comment 2
        define owner: [user]
  # Needs to be thrown in parsing
- name: duplicate relations
  dsl: |
    model
      schema 1.1
    type user
    type document
      relations
        define viewer: [user]
        define viewer: [user]
    type member
  expected_errors:
    - msg: "'viewer' is already defined in 'document'"
      line:
        start: 6
        end: 6
      column:
        start: 11
        end: 17
      metadata:
        symbol: "viewer"
- name: mixture of 1.0 and 1.1 should yield error
  dsl: |
    model
      schema 1.1
    type user
    type org
      relations
        define member: [user]
    type group
      relations
        define parent as self
        define viewer as viewer from parent
  expected_errors:
    - msg: "missing ':' at 'as'"
      line:
        start: 8
        end: 8
      column:
        start: 18
        end: 20
      metadata:
        symbol: "as"
    - msg: "mismatched input ' ' expecting {<EOF>, NEWLINE}"
      line:
        start: 8
        end: 8
      column:
        start: 20
        end: 21
      metadata:
        symbol: " "
- name: empty directly assignable relations with spaces should yield error
  dsl: |
    model
      schema 1.1
    type user
    type org
      relations
        define member: [ ]
        define reader: [user]
  expected_errors:
    - msg: "extraneous input ']' expecting {IDENTIFIER, 'module', 'model', 'schema', 'extend', 'type', 'relation', NEWLINE}"
      line:
        start: 5
        end: 5
      column:
        start: 21
        end: 22
      metadata:
        symbol: "]"
    - msg: mismatched input 'define' expecting {IDENTIFIER, 'module', 'model',
        'schema', 'extend', 'type', 'relation'}
      line:
        start: 6
        end: 6
      column:
        start: 4
        end: 10
      metadata:
        symbol: "define"
    - msg: "mismatched input 'reader' expecting {',', ']'}"
      line:
        start: 6
        end: 6
      column:
        start: 11
        end: 17
      metadata:
        symbol: reader
- name: empty directly assignable relations without spaces should yield error
  dsl: |
    model
      schema 1.1
    type user
    type org
      relations
        define member: []
        define reader: [user]
  expected_errors:
    - msg: "extraneous input ']' expecting {WHITESPACE, IDENTIFIER, 'module', 'model', 'schema', 'extend', 'type', 'relation', NEWLINE}"
      line:
        start: 5
        end: 5
      column:
        start: 20
        end: 21
      metadata:
        symbol: "]"
    - msg: "mismatched input 'define' expecting {IDENTIFIER, 'module', 'model', 'schema', 'extend', 'type', 'relation'}"
      line:
        start: 6
        end: 6
      column:
        start: 4
        end: 10
      metadata:
        symbol: "define"
    - msg: "mismatched input 'reader' expecting {',', ']'}"
      line:
        start: 6
        end: 6
      column:
        start: 11
        end: 17
      metadata:
        symbol: "reader"
- name: model 1.1 has no directly allowed types in viewer
  dsl: |
    model
      schema 1.1
    type user
    type folder
      relations
        define parent: [folder]
        define viewer as self or viewer from parent
  expected_errors:
    - msg: "missing ':' at 'as'"
      line:
        start: 6
        end: 6
      column:
        start: 18
        end: 20
      metadata:
        symbol: "as"
    - msg: "mismatched input ' ' expecting {<EOF>, NEWLINE}"
      line:
        start: 6
        end: 6
      column:
        start: 20
        end: 21
      metadata:
        symbol: " "
- name: >-
    mixing 1.0 and 1.1 should not be allowed as non assignable self is not
    allowed
  dsl: |
    model
      schema 1.1
    type user
    type folder
      relations
        define reader: [user]
        define viewer as self or reader
  expected_errors:
    - msg: "missing ':' at 'as'"
      line:
        start: 6
        end: 6
      column:
        start: 18
        end: 20
      metadata:
        symbol: "as"
    - msg: "mismatched input ' ' expecting {<EOF>, NEWLINE}"
      line:
        start: 6
        end: 6
      column:
        start: 20
        end: 21
      metadata:
        symbol: " "
- name: should not allow no model schema
  dsl: |
    type user
    type group
      relations
        define group: [user] as self
  expected_errors:
    - msg: "extraneous input 'type' expecting {WHITESPACE, '#', 'module', 'model', NEWLINE}"
      line:
        start: 0
        end: 0
      column:
        start: 0
        end: 4
      metadata:
        symbol: "type"
    - msg: "extraneous input 'user' expecting {'#', 'module', 'model', NEWLINE}"
      line:
        start: 0
        end: 0
      column:
        start: 5
        end: 9
      metadata:
        symbol: "user"
    - msg: "mismatched input 'type' expecting {'#', 'module', 'model'}"
      line:
        start: 1
        end: 1
      column:
        start: 0
        end: 4
      metadata:
        symbol: "type"
- name: incorrect wildcard restriction should be raised
  dsl: |
    model
      schema 1.1
    type user
    type group
      relations
        define member: [user, user:*:*]
  expected_errors:
    - msg: "mismatched input ':' expecting {',', WHITESPACE, ']'}"
      line:
        start: 5
        end: 5
      column:
        start: 32
        end: 33
      metadata:
        symbol: ":"
- name: exclusion target not allow to reference itself in TTU
  dsl: |
    model
      schema 1.1
    type user
    type document
      relations
        define editor: [user]
        define viewer: editor but not [document#viewer]
  expected_errors:
    - msg: "extraneous input '[' expecting {'(', IDENTIFIER, 'module', 'model', 'schema', 'extend', 'type', 'relation'}"
      line:
        start: 6
        end: 6
      column:
        start: 34
        end: 35
      metadata:
        symbol: "["
    - msg: "mismatched input '#' expecting {<EOF>, NEWLINE}"
      line:
        start: 6
        end: 6
      column:
        start: 43
        end: 44
      metadata:
        symbol: "#"
- name: detect if every child in union are related
  dsl: |
    model
      schema 1.1
    type document
      relations
        define viewer: [document#viewer] or [document#editor]
        define editor: [document#viewer] or [document#editor]
  expected_errors:
    - msg: "extraneous input '[' expecting {'(', IDENTIFIER, 'module', 'model', 'schema', 'extend', 'type', 'relation'}"
      line:
        start: 4
        end: 4
      column:
        start: 40
        end: 41
      metadata:
        symbol: "["
    - msg: "mismatched input '#' expecting {<EOF>, NEWLINE}"
      line:
        start: 4
        end: 4
      column:
        start: 49
        end: 50
      metadata:
        symbol: "#"
- name: intersection child to reference other relations for same type
  dsl: |
    model
      schema 1.1
    type user
    type document
      relations
        define editor: [user]
        define viewer: [user] and [document#editor]
  expected_errors:
    - msg: "extraneous input '[' expecting {'(', IDENTIFIER, 'module', 'model', 'schema', 'extend', 'type', 'relation'}"
      line:
        start: 6
        end: 6
      column:
        start: 30
        end: 31
      metadata:
        symbol: "["
    - msg: "mismatched input '#' expecting {<EOF>, NEWLINE}"
      line:
        start: 6
        end: 6
      column:
        start: 39
        end: 40
      metadata:
        symbol: "#"
- name: exclusion base to reference other relations for same type
  dsl: |
    model
      schema 1.1
    type user
    type document
      relations
        define editor: [user]
        define viewer: [document#editor] but not [user]
  expected_errors:
    - msg: "extraneous input '[' expecting {'(', IDENTIFIER, 'module', 'model', 'schema', 'extend', 'type', 'relation'}"
      line:
        start: 6
        end: 6
      column:
        start: 45
        end: 46
      metadata:
        symbol: "["
    - msg: "extraneous input ']' expecting {<EOF>, NEWLINE}"
      line:
        start: 6
        end: 6
      column:
        start: 50
        end: 51
      metadata:
        symbol: "]"
- name: exclusion target to reference other relations for same type
  dsl: |
    model
      schema 1.1
    type user
    type document
      relations
        define editor: [user]
        define viewer: [user] but not [document#editor]
  expected_errors:
    - msg: "extraneous input '[' expecting {'(', IDENTIFIER, 'module', 'model', 'schema', 'extend', 'type', 'relation'}"
      line:
        start: 6
        end: 6
      column:
        start: 34
        end: 35
      metadata:
        symbol: "["
    - msg: "mismatched input '#' expecting {<EOF>, NEWLINE}"
      line:
        start: 6
        end: 6
      column:
        start: 43
        end: 44
      metadata:
        symbol: "#"
- name: union child to reference other relations for same type
  dsl: |
    model
      schema 1.1
    type user
    type document
      relations
        define editor: [user]
        define viewer: [user] or [document#editor]
  expected_errors:
    - msg: "extraneous input '[' expecting {'(', IDENTIFIER, 'module', 'model', 'schema', 'extend', 'type', 'relation'}"
      line:
        start: 6
        end: 6
      column:
        start: 29
        end: 30
      metadata:
        symbol: "["
    - msg: "mismatched input '#' expecting {<EOF>, NEWLINE}"
      line:
        start: 6
        end: 6
      column:
        start: 38
        end: 39
      metadata:
        symbol: "#"
- name: type restriction cannot contains both wildcard and relation
  dsl: |
    model
      schema 1.1
    type user
    type department
      relations
        define member: [user]
    type org
      relations
        define reader: [department, department#member:*]
  expected_errors:
    - msg: "mismatched input ':' expecting {',', WHITESPACE, ']'}"
      line:
        start: 8
        end: 8
      column:
        start: 49
        end: 50
      metadata:
        symbol: ":"
- name: simple group reference to itself
  dsl: |
    model
      schema 1.1
    type user
    type group
      relations
        define group: [group]
  expected_errors: []
- name: group has entry point to itself
  dsl: |
    model
      schema 1.1
    type user
    type org
      relations
        define viewer: [user]
    type group
      relations
        define parent: [group, org]
        define viewer: viewer from parent
  expected_errors: []
- name: intersection with directly related
  dsl: |
    model
      schema 1.1
    type user
    type org
      relations
        define member: [user]
    type group
      relations
        define parent: [group]
        define writer: [user, org#member]
        define viewer: [user, org#member] or writer
  expected_errors: []
- name: should allow directly assigned as last item
  dsl: |
    model
      schema 1.1
    type user
    type org
      relations
        define member: [user]
    type group
      relations
        define parent: [group]
        define writer: [user, org#member]
        define viewer: [user, org#member] or writer
  expected_errors: []
- name: union with directly related
  dsl: |
    model
      schema 1.1
    type user
    type org
      relations
        define member: [user]
    type group
      relations
        define parent: [group]
        define writer: [user, org#member]
        define viewer: [user, org#member] and writer
  expected_errors: []
- name: union allow directly assigned as last item
  dsl: |
    model
      schema 1.1
    type user
    type org
      relations
        define member: [user]
    type group
      relations
        define parent: [group]
        define writer: [user, org#member]
        define viewer: [user, org#member] and writer
  expected_errors: []
- name: but not with directly linked
  dsl: |
    model
      schema 1.1
    type user
    type docs
      relations
        define blocked: [user]
        define can_view: [user] but not blocked
  expected_errors: []
- name: intersection with directly related and has spaces and blank lines
  dsl: |
    model
      schema 1.1
    type user
    type org

      relations
        define member: [user]    

    type group
      relations
        define parent: [group]
        define writer: [user, org#member]
        define viewer:    [   user,    org#member   ]       or    writer
  expected_errors: []
- name: model 1.1 tuple to userset
  dsl: |
    model
      schema 1.1
    type folder
      relations
        define viewer: [user]

    type document
      relations
        define parent: [folder]
        define viewer: [user] or viewer from parent
    type user
  expected_errors: []
- name: model 1.1 allow TTU with relations as long as 1 child has such relation
  dsl: |
    model
      schema 1.1
    type final
      relations
        define children: [child1, child2]
        define has_assigned: u1 from children or u2 from children
    type child1
      relations
        define role: [user]
        define u1: role
    type child2
      relations
        define role: [user]
        define u2: role
    type user
  expected_errors: []
- name: model 1.1 wildcard restricted type
  dsl: |
    model
      schema 1.1
    type folder
      relations
        define viewer: [user, user:*]

    type user
  expected_errors: []
- name: model 1.1 wildcard restricted type in the middle
  dsl: |
    model
      schema 1.1
    type folder
      relations
        define viewer: [user, user:*, group]

    type user
    type group
  expected_errors: []
- name: model 1.1 with spacing in allowed type
  dsl: |
    model
      schema 1.1
    type folder
      relations
        define viewer: [  user  , user:*  , group  ]

    type user
    type group
  expected_errors: []
- name: union does not require all child to have entry
  dsl: |
    model
      schema 1.1
    type user
    type doc
      relations
        define admin: [user]
        define action1: admin or action2 or action3
        define action2: admin or action3 or action1
        define action3: admin or action1 or action2
  expected_errors: []
- name: union does not require all child to have entry even for intersection child
  dsl: |
    model
      schema 1.1
    type user
    type docs
      relations
        define admin: [user]
        define union1: admin or union2
        define union2: admin or union1
        define intersection1: union1 and union2
        define intersection2: union1 and union2
  expected_errors: []
- name: union does not require all child to have entry even for exclusion child
  dsl: |
    model
      schema 1.1
    type user
    type docs
      relations
        define admin: [user]
        define union1: admin or union2
        define union2: admin or union1
        define exclusion1: admin but not union1
        define exclusion2: admin but not union2
  expected_errors: []
- name: union child allow to reference itself in TTU
  dsl: |
    model
      schema 1.1
    type user
    type document
      relations
        define editor: [user]
        define viewer: [document#viewer] or editor
  expected_errors: []
- name: mixture of relations from relations for same type
  dsl: |
    model
      schema 1.1
    type user

    type document
      relations
        define restricted: [user]
        define editor: [user]
        define viewer: [document#viewer] or editor
        define can_view: viewer but not restricted
        define can_view_actual: can_view
  expected_errors: []
- name: extraneous spaces and newlines should still work
  dsl: |

    model
       schema 1.1
     type user

  expected_errors: []
# Conditions
- name: unsupported parameter type map<map>
  dsl: |
    model
      schema 1.1
    type user
    type document
      relations
        define viewer: [user with is_not_deleted]
    condition is_not_deleted(status: map<map>) {
      status != "deleted"
    }
  expected_errors:
    - msg: "mismatched input 'map' expecting CONDITION_PARAM_TYPE"
      line:
        start: 6
        end: 6
      column:
        start: 37
        end: 40
      metadata:
        symbol: "map"
- name: unsupported parameter type list<map>
  dsl: |
    model
      schema 1.1
    type user
    type document
      relations
        define viewer: [user with is_not_deleted]
    condition is_not_deleted(status: list<map>) {
      status != "deleted"
    }
  expected_errors:
    - msg: "mismatched input 'map' expecting CONDITION_PARAM_TYPE"
      line:
        start: 6
        end: 6
      column:
        start: 38
        end: 41
      metadata:
        symbol: "map"
- name: unsupported parameter type map<list>
  dsl: |
    model
      schema 1.1
    type user
    type document
      relations
        define viewer: [user with is_not_deleted]
    condition is_not_deleted(status: map<list>) {
      status != "deleted"
    }
  expected_errors:
    - msg: "mismatched input 'list' expecting CONDITION_PARAM_TYPE"
      line:
        start: 6
        end: 6
      column:
        start: 37
        end: 41
      metadata:
        symbol: "list"
- name: unsupported parameter type list<list>
  dsl: |
    model
      schema 1.1
    type user
    type document
      relations
        define viewer: [user with is_not_deleted]
    condition is_not_deleted(status: list<list>) {
      status != "deleted"
    }
  expected_errors:
    - msg: "mismatched input 'list' expecting CONDITION_PARAM_TYPE"
      line:
        start: 6
        end: 6
      column:
        start: 38
        end: 42
      metadata:
        symbol: "list"
- name: parameter type list needs generic type
  dsl: |
    model
      schema 1.1
    type user
    type document
      relations
        define viewer: [user with is_not_deleted]
    condition is_not_deleted(status: list) {
      status != "deleted"
    }
  expected_errors:
    - msg: "mismatched input ')' expecting '<'"
      line:
        start: 6
        end: 6
      column:
        start: 37
        end: 38
      metadata:
        symbol: ")"
- name: parameter type map needs generic type
  dsl: |
    model
      schema 1.1
    type user
    type document
      relations
        define viewer: [user with is_not_deleted]
    condition is_not_deleted(status: map) {
      status != "deleted"
    }
  expected_errors:
    - msg: "mismatched input ')' expecting '<'"
      line:
        start: 6
        end: 6
      column:
        start: 36
        end: 37
      metadata:
        symbol: ")"
- name: having no parameter name should fail
  dsl: |
    model
      schema 1.1
    type user
    type document
      relations
        define viewer: [user with is_not_deleted]
    condition is_not_deleted(string) {
      status != "deleted"
    }
  expected_errors:
    - msg: "mismatched input 'string' expecting {WHITESPACE, IDENTIFIER, NEWLINE}"
      line:
        start: 6
        end: 6
      column:
        start: 25
        end: 31
      metadata:
        symbol: "string"
    - msg: "mismatched input 'status' expecting <EOF>"
      line:
        start: 7
        end: 7
      column:
        start: 2
        end: 8
      metadata:
        symbol: "status"
- name: condition names cannot be duplicated
  dsl: |
    model
      schema 1.1
    type user
    type document
      relations
        define viewer: [user with is_not_deleted]
    condition is_not_deleted(status: string) {
      status != "deleted"
    }
    condition is_not_deleted(status: string) {
      status != "deleted"
    }
  expected_errors:
    - msg: "condition 'is_not_deleted' is already defined in the model"
      line:
        start: 9
        end: 9
      column:
        start: 10
        end: 24
      metadata:
        symbol: "is_not_deleted"
- name: parameter names cannot be duplicated
  dsl: |
    model
      schema 1.1
    type user
    type document
      relations
        define viewer: [user with is_not_deleted]
    condition is_not_deleted(status: string, status: string) {
      status != "deleted"
    }
  expected_errors:
    - msg: "parameter 'status' is already defined in the condition 'is_not_deleted'"
      line:
        start: 6
        end: 6
      column:
        start: 41
        end: 47
      metadata:
        symbol: "status"

- name: a model with a valid condition and type restrictions
  dsl: |
    model
      schema 1.1
    type user
      relations      
        define follower: [user, user:*, user#follower, user with is_not_hidden, user:* with is_not_hidden, user#follower with is_not_hidden]  
    condition is_not_hidden(status: string) {
      status != "hidden"
    }

- name: a valid model with multiple operators
  dsl: |
    model
      schema 1.1
    type user
      relations
        define rel1: [user]
        define rel2: [user]
        define rel3: [user]
        define rel4: [user]
        define rel5: [user]
        define rel6: [user]
        define rel7: [user]
        define rel8: [user]
        define rel9: (rel1 or rel2 or rel3) but not ((rel4 and rel5 and rel6) but not (rel7 but not rel8))

- name: a valid model with multiple operators x2
  dsl: |
    model
      schema 1.1
    type user
      relations
        define rel1: [user]
        define rel2: [user]
        define rel3: [user]
        define rel4: [user]
        define rel5: [user]
        define rel6: [user]
        define rel7: [user]
        define rel8: [user]
        define rel9: ((rel1 or rel2 or rel3) but not ((rel4 and rel5 and rel6) but not (rel7 but not rel8)))

- name: an invalid model with multiple type restriction instances in a relation definition
  dsl: |
    model
      schema 1.1
    type user
      relations
        define viewer: [user] or [user]
  expected_errors:
    - msg: "extraneous input '[' expecting {'(', IDENTIFIER, 'module', 'model', 'schema', 'extend', 'type', 'relation'}"
      line:
        start: 4
        end: 4
      column:
        start: 29
        end: 30
      metadata:
        symbol: "["
    - msg: "extraneous input ']' expecting {<EOF>, NEWLINE}"
      line:
        start: 4
        end: 4
      column:
        start: 34
        end: 35
      metadata:
        symbol: "]"
- name: an invalid model with confusing but not references
  dsl: |
    model
      schema 1.1
    type user
      relations
        define rel1: [user]
        define rel2: [user]
        define rel3: [user]
        define rel4: rel1 but not rel2 but not rel3
  expected_errors:
    - msg: "mismatched input ' ' expecting {<EOF>, NEWLINE}"
      line:
        start: 7
        end: 7
      column:
        start: 34
        end: 35
      metadata:
        symbol: " "
- name: an invalid model with mixed operators
  dsl: |
    model
      schema 1.1
    type user
      relations
        define rel1: [user]
        define rel2: [user]
        define rel3: [user]
        define rel4: rel1 and rel2 or rel3
  expected_errors:
    - msg: "mismatched input ' ' expecting {<EOF>, NEWLINE}"
      line:
        start: 7
        end: 7
      column:
        start: 30
        end: 31
      metadata:
        symbol: " "
- name: an invalid model x1
  dsl: |
    model
      schema 1.1
    type user
      relations
        define rel1: [user]
        define rel2: but not rel1
  expected_errors:
    - msg: "mismatched input 'but not' expecting {'[', '(', IDENTIFIER, 'module', 'model', 'schema', 'extend', 'type', 'relation'}"
      line:
        start: 5
        end: 5
      column:
        start: 17
        end: 24
      metadata:
        symbol: "but not"

- name: an invalid model x2
  dsl: |
    model
      schema 1.1
    type user
      relations
        define rel1: [user]
        define rel2: or rel1
  expected_errors:
    - msg: "mismatched input 'or' expecting {'[', '(', IDENTIFIER, 'module', 'model', 'schema', 'extend', 'type', 'relation'}"
      line:
        start: 5
        end: 5
      column:
        start: 17
        end: 19
      metadata:
        symbol: "or"

- name: an invalid model x3
  dsl: |
    model
      schema 1.1
    type user
      relations
        define rel1: [user]
        define rel2: and rel1
  expected_errors:
    - msg: "mismatched input 'and' expecting {'[', '(', IDENTIFIER, 'module', 'model', 'schema', 'extend', 'type', 'relation'}"
      line:
        start: 5
        end: 5
      column:
        start: 17
        end: 20
      metadata:
        symbol: "and"

- name: an invalid model with the type definition not in the first place x1
  dsl: |
    model
      schema 1.1
    type user
      relations
        define rel1: [user]
        define rel2: rel1 and [user]
  expected_errors:
    - msg: "extraneous input '[' expecting {'(', IDENTIFIER, 'module', 'model', 'schema', 'extend', 'type', 'relation'}"
      line:
        start: 5
        end: 5
      column:
        start: 26
        end: 27
      metadata:
        symbol: "["
    - msg: "extraneous input ']' expecting {<EOF>, NEWLINE}"
      line:
        start: 5
        end: 5
      column:
        start: 31
        end: 32
      metadata:
        symbol: "]"

- name: an invalid model with the type definition not in the first place x2
  dsl: |
    model
      schema 1.1
    type user
      relations
        define rel1: [user]
        define rel2: [user]
        define rel3: [user]
        define relation: rel3 or ((rel1 and rel2) but not [user])
  expected_errors:
    - msg: "extraneous input '[' expecting {'(', IDENTIFIER, 'module', 'model', 'schema', 'extend', 'type', 'relation'}"
      line:
        start: 7
        end: 7
      column:
        start: 54
        end: 55
      metadata:
        symbol: "["
    - msg: "extraneous input ']' expecting {')', WHITESPACE}"
      line:
        start: 7
        end: 7
      column:
        start: 59
        end: 60
      metadata:
        symbol: "]"

- name: a valid model should not error
  dsl: |
    model
      schema 1.1
    type user
    type document
      relations
        define editor: [team#member]
    type team
      relations
        define member: [user]

- name: a valid model with comments should not have errors
  dsl: |
    # comment 1
    model
      # comment 2
      schema 1.1
         # comment 3
    type user

    # comment 4
    type document
      # comment 5
      relations
      # comment 6
        define editor: [team#member] # a comment

      # comment 7
        define viewer: [user] or editor # another comment

      # comment 8
      # comment 9

    type team
      relations
        define member: [user]

- name: a valid model with type names doesnt conflict with condition parameter types
  dsl: |
    model
      schema 1.1
    type list
    type map

- name: does not allow module and model
  dsl: |
    model
      schema 1.1
    module foo

    type user
  expected_errors:
    - msg: no viable alternative at input '\nmodule'
      line:
        start: 2
        end: 2
      column:
        start: 0
        end: 6
- name: does not allow extend in model
  dsl: |
    model
      schema 1.1

    extend type foo
  expected_errors:
    - msg: extend can only be used in a modular model
      line:
        start: 3
        end: 3
      column:
        start: 12
        end: 15
- name: a valid model with type names doesn't conflict with built-in keywords
  dsl: |
    model
      schema 1.1
    type user
    type model
      relations
        define model: [user]
        define schema: [user]
        define type: [user]
        define relation: [user]
        define module: [user]
        define extend: [user]
        define other: [model,schema,type,relation,module,extend]
        define another: model or schema or type or relation or module or extend
    type schema
      relations
        define model: [user]
        define schema: [user]
        define type: [user]
        define relation: [user]
        define module: [user]
        define extend: [user]
        define other: [model,schema,type,relation,module,extend]
        define another: model or schema or type or relation or module or extend
    type type
      relations
        define model: [user]
        define schema: [user]
        define type: [user]
        define relation: [user]
        define module: [user]
        define extend: [user]
        define other: [model,schema,type,relation,module,extend]
        define another: model or schema or type or relation or module or extend
    type relation
      relations
        define model: [user]
        define schema: [user]
        define type: [user]
        define relation: [user]
        define module: [user]
        define extend: [user]
        define other: [model,schema,type,relation,module,extend]
        define another: model or schema or type or relation or module or extend
    type module
      relations
        define model: [user]
        define schema: [user]
        define type: [user]
        define relation: [user]
        define module: [user]
        define extend: [user]
        define other: [model,schema,type,relation,module,extend]
        define another: model or schema or type or relation or module or extend
    type extend
      relations
        define model: [user]
        define schema: [user]
        define type: [user]
        define relation: [user]
        define module: [user]
        define extend: [user]
        define other: [model,schema,type,relation,module,extend]
        define another: model or schema or type or relation or module or extend

- name: disallows multiple extends for same type
  dsl: |
    module foo

    extend type bar

    extend type bar

    extend type bar
  expected_errors:
    - msg: "'bar' is already extended in file."
      line:
        start: 4
        end: 4
      column:
        start: 12
        end: 15
    - msg: "'bar' is already extended in file."
      line:
        start: 6
        end: 6
      column:
        start: 12
        end: 15
- name: valid mixin syntax
  dsl: |
    model
      schema 1.1
    mixin foo
      relations
        define relationship1: [user]
        define relationship2: [user]
    type user
      relations
        include foo
        define relationship3: [user]
- name: valid mixin syntax with multiple mixins
  dsl: |
    model
      schema 1.1
    mixin foo
      relations
        define relationship1: [user]
        define relationship2: [user]
    mixin bar
      relations
        define relationship3: [user]
        define relationship4: [user]
    type user
      relations
        include foo
        include bar
        define relationship5: [user]
- name: valid mixin syntax with multiple mixins with mixed up order
  dsl: |
    model
      schema 1.1
    mixin foo
      relations
        define relationship1: [user]
        define relationship2: [user]
    mixin bar
      relations
        define relationship3: [user]
        define relationship4: [user]
    type user
      relations
        include bar
        define relationship5: [user]
        include foo
- name: including the same mixin on multiple types dedupes the relations when serializing back to DSL
  dsl: |
    model
      schema 1.2
    mixin foo
      relations
        define relationship1: [user]
        define relationship2: [user]
    type user
    type type1
      relations
        include foo
- name: including the same mixin multiple times throws an error
  dsl: |
    model
      schema 1.2
    mixin foo
      relations
        define relationship1: [user]
    type bar
      relations
        include foo
        include foo
  expected_errors:
    - msg: "mixin 'foo' is already included"
      line:
        start: 8
        end: 8
      column:
        start: 12
        end: 15
      metadata:
        symbol: "foo"
- name: including an invalid mixin produces an error
  dsl: |
    model
      schema 1.1
    mixin foo
      relations
        define relationship1: [user]
    type user
      relations
        include bar
  expected_errors:
    - msg: "mixin 'bar' is not defined"
      line:
        start: 7
        end: 7
      column:
        start: 12
        end: 15
      metadata:
        symbol: "bar"
- name: does not allow defining relations with the same name inside a mixin
  dsl: |
    model
      schema 1.1
    mixin foo
      relations
        define relationship1: [user]
        define relationship1: [user]
    type user
      relations
        include foo
  expected_errors:
    - msg: "'relationship1' is already defined in mixin 'foo'"
      line:
        start: 5
        end: 5
      column:
        start: 11
        end: 24
      metadata:
        symbol: "relationship1"
- name: does not allow defining multiple mixins with the same name
  dsl: |
    model
      schema 1.1
    mixin foo
      relations
        define relationship1: [user]
    mixin foo
      relations
        define relationship2: [user]
    type user
      relations
        include foo
  expected_errors:
    - msg: "mixin 'foo' is already defined"
      line:
        start: 5
        end: 5
      column:
        start: 6
        end: 9
      metadata:
        symbol: "foo"
- name: does not allow refining relationships that are already on a mixin
  dsl: |
    model
      schema 1.1
    mixin foo
      relations
        define relationship1: [user]
    type user
      relations
        include foo
        define relationship1: [user]
  expected_errors:
    - msg: "'relationship1' is already defined in mixin 'foo'"
      line:
        start: 8
        end: 8
      column:
        start: 11
        end: 24
      metadata:
        symbol: "relationship1"
- name: does not allow refining relationships that are defined before including a mixin
  dsl: |
    model
      schema 1.1
    mixin foo
      relations
        define relationship1: [user]
    type user
      relations
        define relationship1: [user]
        include foo
  expected_errors:
    - msg: "'relationship1' is already defined in mixin 'foo'"
      line:
        start: 7
        end: 7
      column:
        start: 11
        end: 24
      metadata:
        symbol: "relationship1"