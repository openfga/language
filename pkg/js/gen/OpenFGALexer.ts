// Generated from /app/OpenFGALexer.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class OpenFGALexer extends Lexer {
	public static readonly COLON = 1;
	public static readonly COMMA = 2;
	public static readonly LESS = 3;
	public static readonly GREATER = 4;
	public static readonly LBRACKET = 5;
	public static readonly RBRACKET = 6;
	public static readonly LPAREN = 7;
	public static readonly RPAREN = 8;
	public static readonly WHITESPACE = 9;
	public static readonly IDENTIFIER = 10;
	public static readonly HASH = 11;
	public static readonly AND = 12;
	public static readonly OR = 13;
	public static readonly BUT_NOT = 14;
	public static readonly FROM = 15;
	public static readonly MODULE = 16;
	public static readonly MODEL = 17;
	public static readonly SCHEMA = 18;
	public static readonly SCHEMA_VERSION = 19;
	public static readonly EXTEND = 20;
	public static readonly TYPE = 21;
	public static readonly CONDITION = 22;
	public static readonly MIXIN = 23;
	public static readonly INCLUDE = 24;
	public static readonly RELATIONS = 25;
	public static readonly RELATION = 26;
	public static readonly DEFINE = 27;
	public static readonly KEYWORD_WITH = 28;
	public static readonly EQUALS = 29;
	public static readonly NOT_EQUALS = 30;
	public static readonly IN = 31;
	public static readonly LESS_EQUALS = 32;
	public static readonly GREATER_EQUALS = 33;
	public static readonly LOGICAL_AND = 34;
	public static readonly LOGICAL_OR = 35;
	public static readonly RPRACKET = 36;
	public static readonly LBRACE = 37;
	public static readonly RBRACE = 38;
	public static readonly DOT = 39;
	public static readonly MINUS = 40;
	public static readonly EXCLAM = 41;
	public static readonly QUESTIONMARK = 42;
	public static readonly PLUS = 43;
	public static readonly STAR = 44;
	public static readonly SLASH = 45;
	public static readonly PERCENT = 46;
	public static readonly CEL_TRUE = 47;
	public static readonly CEL_FALSE = 48;
	public static readonly NUL = 49;
	public static readonly CEL_COMMENT = 50;
	public static readonly NUM_FLOAT = 51;
	public static readonly NUM_INT = 52;
	public static readonly NUM_UINT = 53;
	public static readonly STRING = 54;
	public static readonly BYTES = 55;
	public static readonly NEWLINE = 56;
	public static readonly CONDITION_PARAM_CONTAINER = 57;
	public static readonly CONDITION_PARAM_TYPE = 58;
	public static readonly EOF = Token.EOF;
	public static readonly CONDITION_DEF = 1;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, "':'", 
                                                            "','", "'<'", 
                                                            "'>'", "'['", 
                                                            null, "'('", 
                                                            "')'", null, 
                                                            null, "'#'", 
                                                            "'and'", "'or'", 
                                                            "'but not'", 
                                                            "'from'", "'module'", 
                                                            "'model'", "'schema'", 
                                                            null, "'extend'", 
                                                            "'type'", "'condition'", 
                                                            "'mixin'", "'include'", 
                                                            "'relations'", 
                                                            "'relation'", 
                                                            "'define'", 
                                                            "'with'", "'=='", 
                                                            "'!='", "'in'", 
                                                            "'<='", "'>='", 
                                                            "'&&'", "'||'", 
                                                            "']'", "'{'", 
                                                            "'}'", "'.'", 
                                                            "'-'", "'!'", 
                                                            "'?'", "'+'", 
                                                            "'*'", "'/'", 
                                                            "'%'", "'true'", 
                                                            "'false'", "'null'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, "COLON", 
                                                             "COMMA", "LESS", 
                                                             "GREATER", 
                                                             "LBRACKET", 
                                                             "RBRACKET", 
                                                             "LPAREN", "RPAREN", 
                                                             "WHITESPACE", 
                                                             "IDENTIFIER", 
                                                             "HASH", "AND", 
                                                             "OR", "BUT_NOT", 
                                                             "FROM", "MODULE", 
                                                             "MODEL", "SCHEMA", 
                                                             "SCHEMA_VERSION", 
                                                             "EXTEND", "TYPE", 
                                                             "CONDITION", 
                                                             "MIXIN", "INCLUDE", 
                                                             "RELATIONS", 
                                                             "RELATION", 
                                                             "DEFINE", "KEYWORD_WITH", 
                                                             "EQUALS", "NOT_EQUALS", 
                                                             "IN", "LESS_EQUALS", 
                                                             "GREATER_EQUALS", 
                                                             "LOGICAL_AND", 
                                                             "LOGICAL_OR", 
                                                             "RPRACKET", 
                                                             "LBRACE", "RBRACE", 
                                                             "DOT", "MINUS", 
                                                             "EXCLAM", "QUESTIONMARK", 
                                                             "PLUS", "STAR", 
                                                             "SLASH", "PERCENT", 
                                                             "CEL_TRUE", 
                                                             "CEL_FALSE", 
                                                             "NUL", "CEL_COMMENT", 
                                                             "NUM_FLOAT", 
                                                             "NUM_INT", 
                                                             "NUM_UINT", 
                                                             "STRING", "BYTES", 
                                                             "NEWLINE", 
                                                             "CONDITION_PARAM_CONTAINER", 
                                                             "CONDITION_PARAM_TYPE" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", "CONDITION_DEF", ];

	public static readonly ruleNames: string[] = [
		"HASH", "COLON", "COMMA", "AND", "OR", "BUT_NOT", "FROM", "MODULE", "MODEL", 
		"SCHEMA", "SCHEMA_VERSION", "EXTEND", "TYPE", "CONDITION", "MIXIN", "INCLUDE", 
		"RELATIONS", "RELATION", "DEFINE", "KEYWORD_WITH", "EQUALS", "NOT_EQUALS", 
		"IN", "LESS", "LESS_EQUALS", "GREATER_EQUALS", "GREATER", "LOGICAL_AND", 
		"LOGICAL_OR", "LBRACKET", "RPRACKET", "LBRACE", "RBRACE", "LPAREN", "RPAREN", 
		"DOT", "MINUS", "EXCLAM", "QUESTIONMARK", "PLUS", "STAR", "SLASH", "PERCENT", 
		"CEL_TRUE", "CEL_FALSE", "NUL", "BACKSLASH", "LETTER", "DIGIT", "EXPONENT", 
		"HEXDIGIT", "RAW", "ESC_SEQ", "ESC_CHAR_SEQ", "ESC_OCT_SEQ", "ESC_BYTE_SEQ", 
		"ESC_UNI_SEQ", "WHITESPACE", "CEL_COMMENT", "NUM_FLOAT", "NUM_INT", "NUM_UINT", 
		"STRING", "BYTES", "IDENTIFIER", "NEWLINE", "CONDITION_DEF_END", "CONDITION_PARAM_CONTAINER", 
		"CONDITION_PARAM_TYPE", "CONDITION_PARAM_TYPE_LESS", "CONDITION_PARAM_TYPE_GREATER", 
		"CONDITION_OPEN", "CONDITION_COLON", "CONDITION_COMMA", "CONDITION_WS", 
		"CONDITION_NAME",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, OpenFGALexer._ATN, OpenFGALexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "OpenFGALexer.g4"; }

	public get literalNames(): (string | null)[] { return OpenFGALexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return OpenFGALexer.symbolicNames; }
	public get ruleNames(): string[] { return OpenFGALexer.ruleNames; }

	public get serializedATN(): number[] { return OpenFGALexer._serializedATN; }

	public get channelNames(): string[] { return OpenFGALexer.channelNames; }

	public get modeNames(): string[] { return OpenFGALexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,58,712,6,-1,6,-1,
	2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,
	2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,
	7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,
	23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,
	2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,
	38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,
	7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,
	52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,
	2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,
	67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,
	7,74,2,75,7,75,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,5,
	1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,
	1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,4,10,202,8,
	10,11,10,12,10,203,1,10,1,10,4,10,208,8,10,11,10,12,10,209,1,11,1,11,1,
	11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,
	1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,
	15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
	1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,
	18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,21,
	1,22,1,22,1,22,1,23,1,23,1,24,1,24,1,24,1,25,1,25,1,25,1,26,1,26,1,27,1,
	27,1,27,1,28,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,
	1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,
	41,1,41,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,
	1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,47,1,47,1,48,1,48,1,49,1,49,3,49,358,
	8,49,1,49,4,49,361,8,49,11,49,12,49,362,1,50,1,50,1,51,1,51,1,52,1,52,1,
	52,1,52,3,52,373,8,52,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,55,1,55,
	1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,
	56,1,56,1,56,1,56,1,56,1,56,1,56,3,56,406,8,56,1,57,4,57,409,8,57,11,57,
	12,57,410,1,58,1,58,1,58,1,58,5,58,417,8,58,10,58,12,58,420,9,58,1,58,1,
	58,1,59,4,59,425,8,59,11,59,12,59,426,1,59,1,59,4,59,431,8,59,11,59,12,
	59,432,1,59,3,59,436,8,59,1,59,4,59,439,8,59,11,59,12,59,440,1,59,1,59,
	1,59,1,59,4,59,447,8,59,11,59,12,59,448,1,59,3,59,452,8,59,3,59,454,8,59,
	1,60,4,60,457,8,60,11,60,12,60,458,1,60,1,60,1,60,1,60,4,60,465,8,60,11,
	60,12,60,466,3,60,469,8,60,1,61,4,61,472,8,61,11,61,12,61,473,1,61,1,61,
	1,61,1,61,1,61,1,61,4,61,482,8,61,11,61,12,61,483,1,61,1,61,3,61,488,8,
	61,1,62,1,62,1,62,5,62,493,8,62,10,62,12,62,496,9,62,1,62,1,62,1,62,1,62,
	5,62,502,8,62,10,62,12,62,505,9,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,5,
	62,514,8,62,10,62,12,62,517,9,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,
	1,62,5,62,528,8,62,10,62,12,62,531,9,62,1,62,1,62,1,62,1,62,1,62,1,62,5,
	62,539,8,62,10,62,12,62,542,9,62,1,62,1,62,1,62,1,62,1,62,5,62,549,8,62,
	10,62,12,62,552,9,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,5,62,562,8,
	62,10,62,12,62,565,9,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,
	62,5,62,577,8,62,10,62,12,62,580,9,62,1,62,1,62,1,62,1,62,3,62,586,8,62,
	1,63,1,63,1,63,1,64,1,64,3,64,593,8,64,1,64,1,64,1,64,1,64,5,64,599,8,64,
	10,64,12,64,602,9,64,1,65,3,65,605,8,65,1,65,3,65,608,8,65,1,65,1,65,3,
	65,612,8,65,1,65,3,65,615,8,65,1,65,3,65,618,8,65,1,66,1,66,1,66,1,66,1,
	66,1,67,1,67,1,67,1,67,1,67,1,67,1,67,3,67,632,8,67,1,68,1,68,1,68,1,68,
	1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,
	68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,
	1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,
	68,1,68,3,68,683,8,68,1,69,1,69,1,69,1,69,1,70,1,70,1,70,1,70,1,71,1,71,
	1,71,1,71,1,72,1,72,1,72,1,72,1,73,1,73,1,73,1,73,1,74,1,74,1,74,1,74,1,
	75,1,75,1,75,1,75,4,515,529,563,578,0,76,2,11,4,1,6,2,8,12,10,13,12,14,
	14,15,16,16,18,17,20,18,22,19,24,20,26,21,28,22,30,23,32,24,34,25,36,26,
	38,27,40,28,42,29,44,30,46,31,48,3,50,32,52,33,54,4,56,34,58,35,60,5,62,
	36,64,37,66,38,68,7,70,8,72,39,74,40,76,41,78,42,80,43,82,44,84,45,86,46,
	88,47,90,48,92,49,94,0,96,0,98,0,100,0,102,0,104,0,106,0,108,0,110,0,112,
	0,114,0,116,9,118,50,120,51,122,52,124,53,126,54,128,55,130,10,132,56,134,
	0,136,57,138,58,140,0,142,0,144,0,146,0,148,0,150,0,152,0,2,0,1,16,2,0,
	65,90,97,122,2,0,69,69,101,101,2,0,43,43,45,45,3,0,48,57,65,70,97,102,2,
	0,82,82,114,114,10,0,34,34,39,39,63,63,92,92,96,98,102,102,110,110,114,
	114,116,116,118,118,2,0,88,88,120,120,3,0,9,9,12,12,32,32,1,0,10,10,2,0,
	85,85,117,117,4,0,10,10,13,13,34,34,92,92,4,0,10,10,13,13,39,39,92,92,1,
	0,92,92,3,0,10,10,13,13,34,34,3,0,10,10,13,13,39,39,2,0,66,66,98,98,760,
	0,2,1,0,0,0,0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,12,1,0,0,
	0,0,14,1,0,0,0,0,16,1,0,0,0,0,18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,24,
	1,0,0,0,0,26,1,0,0,0,0,28,1,0,0,0,0,30,1,0,0,0,0,32,1,0,0,0,0,34,1,0,0,
	0,0,36,1,0,0,0,0,38,1,0,0,0,0,40,1,0,0,0,0,42,1,0,0,0,0,44,1,0,0,0,0,46,
	1,0,0,0,0,48,1,0,0,0,0,50,1,0,0,0,0,52,1,0,0,0,0,54,1,0,0,0,0,56,1,0,0,
	0,0,58,1,0,0,0,0,60,1,0,0,0,0,62,1,0,0,0,0,64,1,0,0,0,0,66,1,0,0,0,0,68,
	1,0,0,0,0,70,1,0,0,0,0,72,1,0,0,0,0,74,1,0,0,0,0,76,1,0,0,0,0,78,1,0,0,
	0,0,80,1,0,0,0,0,82,1,0,0,0,0,84,1,0,0,0,0,86,1,0,0,0,0,88,1,0,0,0,0,90,
	1,0,0,0,0,92,1,0,0,0,0,116,1,0,0,0,0,118,1,0,0,0,0,120,1,0,0,0,0,122,1,
	0,0,0,0,124,1,0,0,0,0,126,1,0,0,0,0,128,1,0,0,0,0,130,1,0,0,0,0,132,1,0,
	0,0,1,134,1,0,0,0,1,136,1,0,0,0,1,138,1,0,0,0,1,140,1,0,0,0,1,142,1,0,0,
	0,1,144,1,0,0,0,1,146,1,0,0,0,1,148,1,0,0,0,1,150,1,0,0,0,1,152,1,0,0,0,
	2,154,1,0,0,0,4,156,1,0,0,0,6,158,1,0,0,0,8,160,1,0,0,0,10,164,1,0,0,0,
	12,167,1,0,0,0,14,175,1,0,0,0,16,180,1,0,0,0,18,187,1,0,0,0,20,193,1,0,
	0,0,22,201,1,0,0,0,24,211,1,0,0,0,26,218,1,0,0,0,28,223,1,0,0,0,30,235,
	1,0,0,0,32,241,1,0,0,0,34,249,1,0,0,0,36,259,1,0,0,0,38,268,1,0,0,0,40,
	275,1,0,0,0,42,280,1,0,0,0,44,283,1,0,0,0,46,286,1,0,0,0,48,289,1,0,0,0,
	50,291,1,0,0,0,52,294,1,0,0,0,54,297,1,0,0,0,56,299,1,0,0,0,58,302,1,0,
	0,0,60,305,1,0,0,0,62,307,1,0,0,0,64,309,1,0,0,0,66,311,1,0,0,0,68,313,
	1,0,0,0,70,315,1,0,0,0,72,317,1,0,0,0,74,319,1,0,0,0,76,321,1,0,0,0,78,
	323,1,0,0,0,80,325,1,0,0,0,82,327,1,0,0,0,84,329,1,0,0,0,86,331,1,0,0,0,
	88,333,1,0,0,0,90,338,1,0,0,0,92,344,1,0,0,0,94,349,1,0,0,0,96,351,1,0,
	0,0,98,353,1,0,0,0,100,355,1,0,0,0,102,364,1,0,0,0,104,366,1,0,0,0,106,
	372,1,0,0,0,108,374,1,0,0,0,110,377,1,0,0,0,112,382,1,0,0,0,114,405,1,0,
	0,0,116,408,1,0,0,0,118,412,1,0,0,0,120,453,1,0,0,0,122,468,1,0,0,0,124,
	487,1,0,0,0,126,585,1,0,0,0,128,587,1,0,0,0,130,592,1,0,0,0,132,604,1,0,
	0,0,134,619,1,0,0,0,136,631,1,0,0,0,138,682,1,0,0,0,140,684,1,0,0,0,142,
	688,1,0,0,0,144,692,1,0,0,0,146,696,1,0,0,0,148,700,1,0,0,0,150,704,1,0,
	0,0,152,708,1,0,0,0,154,155,5,35,0,0,155,3,1,0,0,0,156,157,5,58,0,0,157,
	5,1,0,0,0,158,159,5,44,0,0,159,7,1,0,0,0,160,161,5,97,0,0,161,162,5,110,
	0,0,162,163,5,100,0,0,163,9,1,0,0,0,164,165,5,111,0,0,165,166,5,114,0,0,
	166,11,1,0,0,0,167,168,5,98,0,0,168,169,5,117,0,0,169,170,5,116,0,0,170,
	171,5,32,0,0,171,172,5,110,0,0,172,173,5,111,0,0,173,174,5,116,0,0,174,
	13,1,0,0,0,175,176,5,102,0,0,176,177,5,114,0,0,177,178,5,111,0,0,178,179,
	5,109,0,0,179,15,1,0,0,0,180,181,5,109,0,0,181,182,5,111,0,0,182,183,5,
	100,0,0,183,184,5,117,0,0,184,185,5,108,0,0,185,186,5,101,0,0,186,17,1,
	0,0,0,187,188,5,109,0,0,188,189,5,111,0,0,189,190,5,100,0,0,190,191,5,101,
	0,0,191,192,5,108,0,0,192,19,1,0,0,0,193,194,5,115,0,0,194,195,5,99,0,0,
	195,196,5,104,0,0,196,197,5,101,0,0,197,198,5,109,0,0,198,199,5,97,0,0,
	199,21,1,0,0,0,200,202,3,98,48,0,201,200,1,0,0,0,202,203,1,0,0,0,203,201,
	1,0,0,0,203,204,1,0,0,0,204,205,1,0,0,0,205,207,5,46,0,0,206,208,3,98,48,
	0,207,206,1,0,0,0,208,209,1,0,0,0,209,207,1,0,0,0,209,210,1,0,0,0,210,23,
	1,0,0,0,211,212,5,101,0,0,212,213,5,120,0,0,213,214,5,116,0,0,214,215,5,
	101,0,0,215,216,5,110,0,0,216,217,5,100,0,0,217,25,1,0,0,0,218,219,5,116,
	0,0,219,220,5,121,0,0,220,221,5,112,0,0,221,222,5,101,0,0,222,27,1,0,0,
	0,223,224,5,99,0,0,224,225,5,111,0,0,225,226,5,110,0,0,226,227,5,100,0,
	0,227,228,5,105,0,0,228,229,5,116,0,0,229,230,5,105,0,0,230,231,5,111,0,
	0,231,232,5,110,0,0,232,233,1,0,0,0,233,234,6,13,0,0,234,29,1,0,0,0,235,
	236,5,109,0,0,236,237,5,105,0,0,237,238,5,120,0,0,238,239,5,105,0,0,239,
	240,5,110,0,0,240,31,1,0,0,0,241,242,5,105,0,0,242,243,5,110,0,0,243,244,
	5,99,0,0,244,245,5,108,0,0,245,246,5,117,0,0,246,247,5,100,0,0,247,248,
	5,101,0,0,248,33,1,0,0,0,249,250,5,114,0,0,250,251,5,101,0,0,251,252,5,
	108,0,0,252,253,5,97,0,0,253,254,5,116,0,0,254,255,5,105,0,0,255,256,5,
	111,0,0,256,257,5,110,0,0,257,258,5,115,0,0,258,35,1,0,0,0,259,260,5,114,
	0,0,260,261,5,101,0,0,261,262,5,108,0,0,262,263,5,97,0,0,263,264,5,116,
	0,0,264,265,5,105,0,0,265,266,5,111,0,0,266,267,5,110,0,0,267,37,1,0,0,
	0,268,269,5,100,0,0,269,270,5,101,0,0,270,271,5,102,0,0,271,272,5,105,0,
	0,272,273,5,110,0,0,273,274,5,101,0,0,274,39,1,0,0,0,275,276,5,119,0,0,
	276,277,5,105,0,0,277,278,5,116,0,0,278,279,5,104,0,0,279,41,1,0,0,0,280,
	281,5,61,0,0,281,282,5,61,0,0,282,43,1,0,0,0,283,284,5,33,0,0,284,285,5,
	61,0,0,285,45,1,0,0,0,286,287,5,105,0,0,287,288,5,110,0,0,288,47,1,0,0,
	0,289,290,5,60,0,0,290,49,1,0,0,0,291,292,5,60,0,0,292,293,5,61,0,0,293,
	51,1,0,0,0,294,295,5,62,0,0,295,296,5,61,0,0,296,53,1,0,0,0,297,298,5,62,
	0,0,298,55,1,0,0,0,299,300,5,38,0,0,300,301,5,38,0,0,301,57,1,0,0,0,302,
	303,5,124,0,0,303,304,5,124,0,0,304,59,1,0,0,0,305,306,5,91,0,0,306,61,
	1,0,0,0,307,308,5,93,0,0,308,63,1,0,0,0,309,310,5,123,0,0,310,65,1,0,0,
	0,311,312,5,125,0,0,312,67,1,0,0,0,313,314,5,40,0,0,314,69,1,0,0,0,315,
	316,5,41,0,0,316,71,1,0,0,0,317,318,5,46,0,0,318,73,1,0,0,0,319,320,5,45,
	0,0,320,75,1,0,0,0,321,322,5,33,0,0,322,77,1,0,0,0,323,324,5,63,0,0,324,
	79,1,0,0,0,325,326,5,43,0,0,326,81,1,0,0,0,327,328,5,42,0,0,328,83,1,0,
	0,0,329,330,5,47,0,0,330,85,1,0,0,0,331,332,5,37,0,0,332,87,1,0,0,0,333,
	334,5,116,0,0,334,335,5,114,0,0,335,336,5,117,0,0,336,337,5,101,0,0,337,
	89,1,0,0,0,338,339,5,102,0,0,339,340,5,97,0,0,340,341,5,108,0,0,341,342,
	5,115,0,0,342,343,5,101,0,0,343,91,1,0,0,0,344,345,5,110,0,0,345,346,5,
	117,0,0,346,347,5,108,0,0,347,348,5,108,0,0,348,93,1,0,0,0,349,350,5,92,
	0,0,350,95,1,0,0,0,351,352,7,0,0,0,352,97,1,0,0,0,353,354,2,48,57,0,354,
	99,1,0,0,0,355,357,7,1,0,0,356,358,7,2,0,0,357,356,1,0,0,0,357,358,1,0,
	0,0,358,360,1,0,0,0,359,361,3,98,48,0,360,359,1,0,0,0,361,362,1,0,0,0,362,
	360,1,0,0,0,362,363,1,0,0,0,363,101,1,0,0,0,364,365,7,3,0,0,365,103,1,0,
	0,0,366,367,7,4,0,0,367,105,1,0,0,0,368,373,3,108,53,0,369,373,3,112,55,
	0,370,373,3,114,56,0,371,373,3,110,54,0,372,368,1,0,0,0,372,369,1,0,0,0,
	372,370,1,0,0,0,372,371,1,0,0,0,373,107,1,0,0,0,374,375,3,94,46,0,375,376,
	7,5,0,0,376,109,1,0,0,0,377,378,3,94,46,0,378,379,2,48,51,0,379,380,2,48,
	55,0,380,381,2,48,55,0,381,111,1,0,0,0,382,383,3,94,46,0,383,384,7,6,0,
	0,384,385,3,102,50,0,385,386,3,102,50,0,386,113,1,0,0,0,387,388,3,94,46,
	0,388,389,5,117,0,0,389,390,3,102,50,0,390,391,3,102,50,0,391,392,3,102,
	50,0,392,393,3,102,50,0,393,406,1,0,0,0,394,395,3,94,46,0,395,396,5,85,
	0,0,396,397,3,102,50,0,397,398,3,102,50,0,398,399,3,102,50,0,399,400,3,
	102,50,0,400,401,3,102,50,0,401,402,3,102,50,0,402,403,3,102,50,0,403,404,
	3,102,50,0,404,406,1,0,0,0,405,387,1,0,0,0,405,394,1,0,0,0,406,115,1,0,
	0,0,407,409,7,7,0,0,408,407,1,0,0,0,409,410,1,0,0,0,410,408,1,0,0,0,410,
	411,1,0,0,0,411,117,1,0,0,0,412,413,5,47,0,0,413,414,5,47,0,0,414,418,1,
	0,0,0,415,417,8,8,0,0,416,415,1,0,0,0,417,420,1,0,0,0,418,416,1,0,0,0,418,
	419,1,0,0,0,419,421,1,0,0,0,420,418,1,0,0,0,421,422,6,58,1,0,422,119,1,
	0,0,0,423,425,3,98,48,0,424,423,1,0,0,0,425,426,1,0,0,0,426,424,1,0,0,0,
	426,427,1,0,0,0,427,428,1,0,0,0,428,430,5,46,0,0,429,431,3,98,48,0,430,
	429,1,0,0,0,431,432,1,0,0,0,432,430,1,0,0,0,432,433,1,0,0,0,433,435,1,0,
	0,0,434,436,3,100,49,0,435,434,1,0,0,0,435,436,1,0,0,0,436,454,1,0,0,0,
	437,439,3,98,48,0,438,437,1,0,0,0,439,440,1,0,0,0,440,438,1,0,0,0,440,441,
	1,0,0,0,441,442,1,0,0,0,442,443,3,100,49,0,443,454,1,0,0,0,444,446,5,46,
	0,0,445,447,3,98,48,0,446,445,1,0,0,0,447,448,1,0,0,0,448,446,1,0,0,0,448,
	449,1,0,0,0,449,451,1,0,0,0,450,452,3,100,49,0,451,450,1,0,0,0,451,452,
	1,0,0,0,452,454,1,0,0,0,453,424,1,0,0,0,453,438,1,0,0,0,453,444,1,0,0,0,
	454,121,1,0,0,0,455,457,3,98,48,0,456,455,1,0,0,0,457,458,1,0,0,0,458,456,
	1,0,0,0,458,459,1,0,0,0,459,469,1,0,0,0,460,461,5,48,0,0,461,462,5,120,
	0,0,462,464,1,0,0,0,463,465,3,102,50,0,464,463,1,0,0,0,465,466,1,0,0,0,
	466,464,1,0,0,0,466,467,1,0,0,0,467,469,1,0,0,0,468,456,1,0,0,0,468,460,
	1,0,0,0,469,123,1,0,0,0,470,472,3,98,48,0,471,470,1,0,0,0,472,473,1,0,0,
	0,473,471,1,0,0,0,473,474,1,0,0,0,474,475,1,0,0,0,475,476,7,9,0,0,476,488,
	1,0,0,0,477,478,5,48,0,0,478,479,5,120,0,0,479,481,1,0,0,0,480,482,3,102,
	50,0,481,480,1,0,0,0,482,483,1,0,0,0,483,481,1,0,0,0,483,484,1,0,0,0,484,
	485,1,0,0,0,485,486,7,9,0,0,486,488,1,0,0,0,487,471,1,0,0,0,487,477,1,0,
	0,0,488,125,1,0,0,0,489,494,5,34,0,0,490,493,3,106,52,0,491,493,8,10,0,
	0,492,490,1,0,0,0,492,491,1,0,0,0,493,496,1,0,0,0,494,492,1,0,0,0,494,495,
	1,0,0,0,495,497,1,0,0,0,496,494,1,0,0,0,497,586,5,34,0,0,498,503,5,39,0,
	0,499,502,3,106,52,0,500,502,8,11,0,0,501,499,1,0,0,0,501,500,1,0,0,0,502,
	505,1,0,0,0,503,501,1,0,0,0,503,504,1,0,0,0,504,506,1,0,0,0,505,503,1,0,
	0,0,506,586,5,39,0,0,507,508,5,34,0,0,508,509,5,34,0,0,509,510,5,34,0,0,
	510,515,1,0,0,0,511,514,3,106,52,0,512,514,8,12,0,0,513,511,1,0,0,0,513,
	512,1,0,0,0,514,517,1,0,0,0,515,516,1,0,0,0,515,513,1,0,0,0,516,518,1,0,
	0,0,517,515,1,0,0,0,518,519,5,34,0,0,519,520,5,34,0,0,520,586,5,34,0,0,
	521,522,5,39,0,0,522,523,5,39,0,0,523,524,5,39,0,0,524,529,1,0,0,0,525,
	528,3,106,52,0,526,528,8,12,0,0,527,525,1,0,0,0,527,526,1,0,0,0,528,531,
	1,0,0,0,529,530,1,0,0,0,529,527,1,0,0,0,530,532,1,0,0,0,531,529,1,0,0,0,
	532,533,5,39,0,0,533,534,5,39,0,0,534,586,5,39,0,0,535,536,3,104,51,0,536,
	540,5,34,0,0,537,539,8,13,0,0,538,537,1,0,0,0,539,542,1,0,0,0,540,538,1,
	0,0,0,540,541,1,0,0,0,541,543,1,0,0,0,542,540,1,0,0,0,543,544,5,34,0,0,
	544,586,1,0,0,0,545,546,3,104,51,0,546,550,5,39,0,0,547,549,8,14,0,0,548,
	547,1,0,0,0,549,552,1,0,0,0,550,548,1,0,0,0,550,551,1,0,0,0,551,553,1,0,
	0,0,552,550,1,0,0,0,553,554,5,39,0,0,554,586,1,0,0,0,555,556,3,104,51,0,
	556,557,5,34,0,0,557,558,5,34,0,0,558,559,5,34,0,0,559,563,1,0,0,0,560,
	562,9,0,0,0,561,560,1,0,0,0,562,565,1,0,0,0,563,564,1,0,0,0,563,561,1,0,
	0,0,564,566,1,0,0,0,565,563,1,0,0,0,566,567,5,34,0,0,567,568,5,34,0,0,568,
	569,5,34,0,0,569,586,1,0,0,0,570,571,3,104,51,0,571,572,5,39,0,0,572,573,
	5,39,0,0,573,574,5,39,0,0,574,578,1,0,0,0,575,577,9,0,0,0,576,575,1,0,0,
	0,577,580,1,0,0,0,578,579,1,0,0,0,578,576,1,0,0,0,579,581,1,0,0,0,580,578,
	1,0,0,0,581,582,5,39,0,0,582,583,5,39,0,0,583,584,5,39,0,0,584,586,1,0,
	0,0,585,489,1,0,0,0,585,498,1,0,0,0,585,507,1,0,0,0,585,521,1,0,0,0,585,
	535,1,0,0,0,585,545,1,0,0,0,585,555,1,0,0,0,585,570,1,0,0,0,586,127,1,0,
	0,0,587,588,7,15,0,0,588,589,3,126,62,0,589,129,1,0,0,0,590,593,3,96,47,
	0,591,593,5,95,0,0,592,590,1,0,0,0,592,591,1,0,0,0,593,600,1,0,0,0,594,
	599,3,96,47,0,595,599,3,98,48,0,596,599,5,95,0,0,597,599,3,74,36,0,598,
	594,1,0,0,0,598,595,1,0,0,0,598,596,1,0,0,0,598,597,1,0,0,0,599,602,1,0,
	0,0,600,598,1,0,0,0,600,601,1,0,0,0,601,131,1,0,0,0,602,600,1,0,0,0,603,
	605,3,116,57,0,604,603,1,0,0,0,604,605,1,0,0,0,605,611,1,0,0,0,606,608,
	5,13,0,0,607,606,1,0,0,0,607,608,1,0,0,0,608,609,1,0,0,0,609,612,5,10,0,
	0,610,612,2,12,13,0,611,607,1,0,0,0,611,610,1,0,0,0,612,614,1,0,0,0,613,
	615,3,116,57,0,614,613,1,0,0,0,614,615,1,0,0,0,615,617,1,0,0,0,616,618,
	3,132,65,0,617,616,1,0,0,0,617,618,1,0,0,0,618,133,1,0,0,0,619,620,3,70,
	34,0,620,621,1,0,0,0,621,622,6,66,2,0,622,623,6,66,3,0,623,135,1,0,0,0,
	624,625,5,109,0,0,625,626,5,97,0,0,626,632,5,112,0,0,627,628,5,108,0,0,
	628,629,5,105,0,0,629,630,5,115,0,0,630,632,5,116,0,0,631,624,1,0,0,0,631,
	627,1,0,0,0,632,137,1,0,0,0,633,634,5,98,0,0,634,635,5,111,0,0,635,636,
	5,111,0,0,636,683,5,108,0,0,637,638,5,115,0,0,638,639,5,116,0,0,639,640,
	5,114,0,0,640,641,5,105,0,0,641,642,5,110,0,0,642,683,5,103,0,0,643,644,
	5,105,0,0,644,645,5,110,0,0,645,683,5,116,0,0,646,647,5,117,0,0,647,648,
	5,105,0,0,648,649,5,110,0,0,649,683,5,116,0,0,650,651,5,100,0,0,651,652,
	5,111,0,0,652,653,5,117,0,0,653,654,5,98,0,0,654,655,5,108,0,0,655,683,
	5,101,0,0,656,657,5,100,0,0,657,658,5,117,0,0,658,659,5,114,0,0,659,660,
	5,97,0,0,660,661,5,116,0,0,661,662,5,105,0,0,662,663,5,111,0,0,663,683,
	5,110,0,0,664,665,5,116,0,0,665,666,5,105,0,0,666,667,5,109,0,0,667,668,
	5,101,0,0,668,669,5,115,0,0,669,670,5,116,0,0,670,671,5,97,0,0,671,672,
	5,109,0,0,672,683,5,112,0,0,673,674,5,105,0,0,674,675,5,112,0,0,675,676,
	5,97,0,0,676,677,5,100,0,0,677,678,5,100,0,0,678,679,5,114,0,0,679,680,
	5,101,0,0,680,681,5,115,0,0,681,683,5,115,0,0,682,633,1,0,0,0,682,637,1,
	0,0,0,682,643,1,0,0,0,682,646,1,0,0,0,682,650,1,0,0,0,682,656,1,0,0,0,682,
	664,1,0,0,0,682,673,1,0,0,0,683,139,1,0,0,0,684,685,3,48,23,0,685,686,1,
	0,0,0,686,687,6,69,4,0,687,141,1,0,0,0,688,689,3,54,26,0,689,690,1,0,0,
	0,690,691,6,70,5,0,691,143,1,0,0,0,692,693,3,68,33,0,693,694,1,0,0,0,694,
	695,6,71,6,0,695,145,1,0,0,0,696,697,3,4,1,0,697,698,1,0,0,0,698,699,6,
	72,7,0,699,147,1,0,0,0,700,701,3,6,2,0,701,702,1,0,0,0,702,703,6,73,8,0,
	703,149,1,0,0,0,704,705,3,116,57,0,705,706,1,0,0,0,706,707,6,74,9,0,707,
	151,1,0,0,0,708,709,3,130,64,0,709,710,1,0,0,0,710,711,6,75,10,0,711,153,
	1,0,0,0,46,0,1,203,209,357,362,372,405,410,418,426,432,435,440,448,451,
	453,458,466,468,473,483,487,492,494,501,503,513,515,527,529,540,550,563,
	578,585,592,598,600,604,607,611,614,617,631,682,11,5,1,0,0,1,0,7,8,0,4,
	0,0,7,3,0,7,4,0,7,7,0,7,1,0,7,2,0,7,9,0,7,10,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!OpenFGALexer.__ATN) {
			OpenFGALexer.__ATN = new ATNDeserializer().deserialize(OpenFGALexer._serializedATN);
		}

		return OpenFGALexer.__ATN;
	}


	static DecisionsToDFA = OpenFGALexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}