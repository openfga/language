publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            pom {
                group = 'dev.openfga'
                artifactId = 'openfga-language'
                name = 'openfga-language'
                version = 'v0.2.0-beta.2'
                description = 'OpenFGA Language package: transformers, validators and more'
                url = 'https://openfga.dev'
                licenses {
                    license {
                        name = 'Apache-2.0'
                        url = 'https://github.com/openfga/language/blob/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        name = 'OpenFGA'
                        url = 'https://openfga.dev'
                    }
                }
                scm {
                    url = 'https://github.com/openfga/language'
                    connection = 'scm:git:git@github.com:openfga/language.git'
                    developerConnection = 'scm:git:git@github.com:openfga/language.git'
                }
            }
        }
    }
    repositories {
        maven {
            name = 'GitHubPackages'
            url = 'https://maven.pkg.github.com/openfga/language'
            credentials {
                username = System.getenv('GITHUB_ACTOR')
                password = System.getenv('GITHUB_TOKEN')
            }
        }
    }
}

signing {
    def signingKey = System.getenv('ORG_GRADLE_PROJECT_SIGNINGKEY')
    def signingPassword = System.getenv('ORG_GRADLE_PROJECT_SIGNINGPASSWORD')
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.maven
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri('https://ossrh-staging-api.central.sonatype.com/service/local/'))
            snapshotRepositoryUrl.set(uri('https://central.sonatype.com/repository/maven-snapshots/'))
            username.set(System.getenv('MAVEN_USERNAME'))
            password.set(System.getenv('MAVEN_PASSWORD'))
        }
    }
}
